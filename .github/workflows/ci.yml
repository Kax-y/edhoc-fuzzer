name: CI
on: [push, pull_request]

jobs:
  Lakers-Client:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup Lakers
        run: |
          curl --proto '=https' --tlsv1.3 https://sh.rustup.rs -sSf | sh -s -- -y
          source "${HOME}/.cargo/env"
          ./scripts/setup_sul.sh lakers

      - name: Test Lakers Client (Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/lakers/client -roundLimit 3
          ./scripts/diff_hyps.sh experiments/saved_results/clients/lakers experiments/results/clients/mealy/lakers 3
      
      - name: Test Lakers Client (RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/lakers/client_ra
          ./scripts/diff_hyps.sh experiments/saved_results/clients/lakers experiments/results/clients/ra/lakers 3

      - name: Compress results
        run: |
          tar -czf lakers_client_mealy.tar.gz experiments/results/clients/mealy/lakers
          tar -czf lakers_client_ra.tar.gz experiments/results/clients/ra/lakers

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            lakers_client_mealy.tar.gz
            lakers_client_ra.tar.gz

  Lakers-Server:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup Lakers
        run: |
          curl --proto '=https' --tlsv1.3 https://sh.rustup.rs -sSf | sh -s -- -y
          source "${HOME}/.cargo/env"
          ./scripts/setup_sul.sh lakers

      - name: Test Lakers Server (Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/lakers/server -roundLimit 3
          ./scripts/diff_hyps.sh experiments/saved_results/servers/lakers experiments/results/servers/mealy/lakers 2
      
      - name: Test Lakers Server (RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/lakers/server_ra
          ./scripts/diff_hyps.sh experiments/saved_results/servers/lakers experiments/results/servers/ra/lakers 2

      - name: Compress results
        run: |
          tar -czf lakers_server_mealy.tar.gz experiments/results/servers/mealy/lakers
          tar -czf lakers_server_ra.tar.gz experiments/results/servers/ra/lakers

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            lakers_server_mealy.tar.gz
            lakers_server_ra.tar.gz

  RISE-Client:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup RISE
        run: ./scripts/setup_sul.sh rise

      - name: Test RISE Client (m4_app, Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/rise/client_m4_app -roundLimit 4
          ./scripts/diff_hyps.sh experiments/saved_results/clients/rise_m4_app experiments/results/clients/mealy/rise_m4_app 4
      
      - name: Test RISE Client (m4_app, RA) 
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/rise/client_m4_app_ra
          ./scripts/diff_hyps.sh experiments/saved_results/clients/rise_m4_app experiments/results/clients/ra/rise_m4_app 4

      - name: Compress results
        run: |
          tar -czf rise_m4_client_mealy.tar.gz experiments/results/clients/mealy/rise_m4_app
          tar -czf rise_m4_client_ra.tar.gz experiments/results/clients/ra/rise_m4_app

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            rise_m4_client_mealy.tar.gz
            rise_m4_client_ra.tar.gz

  RISE-Server:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup RISE
        run: ./scripts/setup_sul.sh rise

      - name: Test RISE Server (m4_app, Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/rise/server_m4_app -roundLimit 5
          ./scripts/diff_hyps.sh experiments/saved_results/servers/rise_m4_app experiments/results/servers/mealy/rise_m4_app 5
      
      - name: Test RISE Server (m4_app, RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/rise/server_m4_app_ra
          ./scripts/diff_hyps.sh experiments/saved_results/servers/rise_m4_app experiments/results/servers/ra/rise_m4_app 5

      - name: Compress results
        run: |
          tar -czf rise_m4_server_mealy.tar.gz experiments/results/servers/mealy/rise_m4_app
          tar -czf rise_m4_server_ra.tar.gz experiments/results/servers/ra/rise_m4_app
  
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            rise_m4_server_mealy.tar.gz
            rise_m4_server_ra.tar.gz
  
  SIFIS-HOME-Client:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup SIFIS-HOME
        run: ./scripts/setup_sul.sh sifis-home

      - name: Test SIFIS-HOME Client (phase_1, Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/sifis-home/client_phase_1 -roundLimit 4
          ./scripts/diff_hyps.sh experiments/saved_results/clients/sifis-home_phase_1 experiments/results/clients/mealy/sifis-home_phase_1 4
      
      - name: Test SIFIS-HOME Client (phase_1, RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/sifis-home/client_phase_1_ra
          ./scripts/diff_hyps.sh experiments/saved_results/clients/sifis-home_phase_1 experiments/results/clients/ra/sifis-home_phase_1 4

      - name: Compress results
        run: |
          tar -czf sifis-home_phase_1_client_mealy.tar.gz experiments/results/clients/mealy/sifis-home_phase_1
          tar -czf sifis-home_phase_1_client_ra.tar.gz experiments/results/clients/ra/sifis-home_phase_1
    
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            sifis-home_phase_1_client_mealy.tar.gz
            sifis-home_phase_1_client_ra.tar.gz

  SIFIS-HOME-Server:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup SIFIS-HOME
        run: ./scripts/setup_sul.sh sifis-home

      - name: Test SIFIS-HOME Server (phase_1, Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/sifis-home/server_phase_1 -roundLimit 5
          ./scripts/diff_hyps.sh experiments/saved_results/servers/sifis-home_phase_1 experiments/results/servers/mealy/sifis-home_phase_1 5

      - name: Test SIFIS-HOME Server (phase_1, RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/sifis-home/server_phase_1_ra
          ./scripts/diff_hyps.sh experiments/saved_results/servers/sifis-home_phase_1 experiments/results/servers/ra/sifis-home_phase_1 5

      - name: Compress results
        run: |
          tar -czf sifis-home_phase_1_server_mealy.tar.gz experiments/results/servers/mealy/sifis-home_phase_1
          tar -czf sifis-home_phase_1_server_ra.tar.gz experiments/results/servers/ra/sifis-home_phase_1
          
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            sifis-home_phase_1_server_mealy.tar.gz
            sifis-home_phase_1_server_ra.tar.gz
    
  uOSCORE-uEDHOC-Client:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup uOSCORE-uEDHOC
        run: ./scripts/setup_sul.sh uoscore-uedhoc

      - name: Test uOSCORE-uEDHOC Client (linux_edhoc_oscore, Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/uoscore-uedhoc/client_linux_edhoc_oscore -roundLimit 3
          ./scripts/diff_hyps.sh experiments/saved_results/clients/uoscore-uedhoc_linux_edhoc_oscore experiments/results/clients/mealy/uoscore-uedhoc_linux_edhoc_oscore 3

      - name: Test uOSCORE-uEDHOC Client (linux_edhoc_oscore, RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/uoscore-uedhoc/client_linux_edhoc_oscore_ra
          ./scripts/diff_hyps.sh experiments/saved_results/clients/uoscore-uedhoc_linux_edhoc_oscore experiments/results/clients/ra/uoscore-uedhoc_linux_edhoc_oscore 3

      - name: Compress results
        run: |
          tar -czf uoscore-uedhoc_linux_edhoc_client_mealy.tar.gz experiments/results/servers/mealy/uoscore-uedhoc_linux_edhoc
          tar -czf uoscore-uedhoc_linux_edhoc_client_ra.tar.gz experiments/results/servers/ra/uoscore-uedhoc_linux_edhoc
    
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            uoscore-uedhoc_linux_edhoc_client_mealy.tar.gz
            uoscore-uedhoc_linux_edhoc_client_ra.tar.gz
    
  uOSCORE-uEDHOC-Server:
    if: ${{ !contains(github.event.head_commit.message, 'ci skip') }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: ts-graphviz/setup-graphviz@v2
      - name: Install pydot
        run: pip3 install pydot

      - name: Setup EDHOC-Fuzzer
        run: ./scripts/setup_fuzzer.sh -l

      - name: Setup uOSCORE-uEDHOC
        run: ./scripts/setup_sul.sh uoscore-uedhoc

      - name: Test uOSCORE-uEDHOC Server (linux_edhoc_oscore, Mealy)
        run: |
          java -jar edhoc-fuzzer.jar @experiments/args/uoscore-uedhoc/server_linux_edhoc_oscore -roundLimit 2
          ./scripts/diff_hyps.sh experiments/saved_results/servers/uoscore-uedhoc_linux_edhoc_oscore experiments/results/servers/mealy/uoscore-uedhoc_linux_edhoc_oscore 2
  
      - name: Test uOSCORE-uEDHOC Server (linux_edhoc_oscore, RA)
        run: |
          java -jar edhoc-fuzzerRA.jar @experiments/args/uoscore-uedhoc/server_linux_edhoc_oscore_ra
          ./scripts/diff_hyps.sh experiments/saved_results/servers/uoscore-uedhoc_linux_edhoc_oscore experiments/results/servers/ra/uoscore-uedhoc_linux_edhoc_oscore 2

      - name: Compress results
        run: |
          tar -czf uoscore-uedhoc_linux_edhoc_server_mealy.tar.gz experiments/results/servers/mealy/uoscore-uedhoc_linux_edhoc
          tar -czf uoscore-uedhoc_linux_edhoc_server_ra.tar.gz experiments/results/servers/ra/uoscore-uedhoc_linux_edhoc
  
      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: Results
          path: |
            uoscore-uedhoc_linux_edhoc_server_mealy.tar.gz
            uoscore-uedhoc_linux_edhoc_server_ra.tar.gz